version: '3'

services:

  mysql:
    image: mysql:8.3.0
    container_name: zotero-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/data:/var/lib/mysql:rw
      - ./mysql/config/my.cnf:/etc/my.cnf:ro
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 20s
        retries: 5
    restart: always

  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: zotero-phpmyadmin
    hostname: localhost.localdomain
    ports:
      - ${MYSQL_PHPMYADMIN_PORT}:80
    environment:
      - PMA_HOST=mysql
    depends_on:
      - mysql
    links:
      - mysql
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    container_name: zotero-elasticsearch
    environment:
      - cluster.name=zotero
      - xpack.security.enabled=false
    restart: always

  redis:
    image: redis:7.2.4-alpine
    container_name: zotero-redis
    volumes:
      - ./redis/data/:/data:rw
    restart: always

  memcached:
     image: memcached:1.6.23-alpine
     container_name: zotero-memcached
     restart: always

  localstack:
    image: atlassianlabs/localstack
    container_name: zotero-localstack
    environment:
      - SERVICES=sns,sqs,apigateway
    restart: always

  minio:
    image: zotero-minio
    container_name: zotero-minio
    build:
      context: ./minio
    volumes:
      - ./minio/data:/data:rw
    ports:
      - ${S3_WEB_UI_PORT}:${S3_WEB_UI_PORT}
    expose:
      - ${S3_SERVER_PORT}
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server /data --address ":${S3_SERVER_PORT}" --console-address ":${S3_WEB_UI_PORT}"
    restart: always

  stream-server:
    image: zotero-stream-server
    container_name: zotero-stream-server
    build:
      context: ./stream-server
    ports:
      - ${STREAM_SERVER_PORT}:8080
    volumes:
      - ./stream-server/config/default.js:/stream-server/config/default.js:ro
    depends_on:
      - redis
      - dataserver
    links:
      - redis
      - dataserver
    restart: always

  tinymce-clean-server:
    image: zotero-tinymce-clean-server
    container_name: zotero-tinymce-clean-server
    build:
      context: ./tinymce-clean-server
    restart: always

  dataserver:
    image: zotero-dataserver
    container_name: zotero-dataserver
    build:
      context: ./dataserver
      dockerfile: Dockerfile
    hostname: localhost.localdomain
    ports:
      - ${DATA_SERVER_PORT}:80
      - ${S3_SERVER_PORT}:${S3_SERVER_PORT}
    volumes:
      - ./dataserver/config/config.inc.php:/var/www/zotero/include/config/config.inc.php-template:ro
      - ./dataserver/config/dbconnect.inc.php:/var/www/zotero/include/config/dbconnect.inc.php-template:ro
    environment:
      - MYSQL_PWD=${MYSQL_ROOT_PASSWORD}
    env_file:
      - .env
    depends_on:
      - mysql
      - elasticsearch
      - redis
      - memcached
      - localstack
      - minio
      - tinymce-clean-server
    links:
      - mysql
      - elasticsearch
      - redis
      - memcached
      - localstack
      - minio
      - tinymce-clean-server
    restart: always
